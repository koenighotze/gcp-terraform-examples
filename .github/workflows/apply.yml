name: Apply project directory

on:
  #checkov:skip=CKV_GHA_7
  workflow_dispatch:
    inputs:
      project:
        type: string
        description: "Project directory to apply"
        required: true
        default: "getting-started/"

env:
  TF_VAR_workload_identity_provider_name: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  TF_VAR_workload_identity_pool_id: ${{ secrets.WORKLOAD_IDENTITY_POOL_ID }}
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_sa_email: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
  TF_VAR_local_user: ${{ secrets.LOCAL_USER_EMAIL_ADDRESS }}
  TF_IN_AUTOMATION: true
  TF_INPUT: false
  CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

permissions:
  id-token: write

jobs:
  compliance-scan:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ github.event.inputs.project }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@v12.2982.0
        with:
          framework: terraform
          # we are fine with Google's Keys
          # we are fine with basic roles (no org), we are fine with our own module
          skip_check: CKV_GCP_84,CKV_GIT_4,CKV_GCP_117,CKV_TF_1,CKV2_GCP_18
          output_format: cli
          download_external_modules: true

  apply:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ github.event.inputs.project }}

    needs:
      - compliance-scan

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authenticating
        uses: google-github-actions/auth@v2.1.7
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v2.1.2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~> 1.8.0"
      - name: Init
        run: terraform init -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}"
      - name: Apply
        run: terraform apply -var git_sha="${{ github.sha }}" -auto-approve
      - name: Show Terraform Output as Summary
        run: |
          {
            echo "### Terraform Output";
            echo "\`\`\`";
            terraform output;
            echo "\`\`\`";
          }  > "${GITHUB_STEP_SUMMARY}"
